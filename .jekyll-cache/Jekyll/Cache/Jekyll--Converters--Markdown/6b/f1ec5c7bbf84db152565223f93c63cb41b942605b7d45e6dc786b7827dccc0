I"á
<h2 id="current-courses">Current Courses</h2>

<ul>
  <li>INT2212: Computer Architecture, VNU-UET, <em>Undergraduate</em>, [<a href="https://courses.uet.vnu.edu.vn/course/view.php?id=5575">URL</a>].</li>
</ul>

<h2 id="previous-courses">Previous Courses</h2>

<ul>
  <li>ELT3071: Real-time Embedded Systems, VNU-UET, <em>Undergraduate</em>.</li>
  <li>INT3409: Robotics Programming, VNU-UET, <em>Undergraduate</em>.</li>
  <li>ELT2401: Digital Electronics, VNU-UET, <em>Undergraduate</em>, [<a href="https://courses.uet.vnu.edu.vn/course/view.php?id=5856">URL</a>].</li>
  <li>SYC04: Advanced Computer Organization, Uni. of Aizu, <em>Graduate</em>, invited lecturer, 2019.</li>
  <li>SYC04: Advanced Computer Organization, Uni. of Aizu, <em>Graduate</em>, invited lecturer, 2021.</li>
</ul>

<hr />

<h2 id="mentoring">Mentoring</h2>
<p>*  Some student projects can be founded <a href="/mentor">here</a>.</p>

<hr />
<!-- 
## Guide for new students

Recommended textbook and material. This list is not up-to-date.
1. Computer Architecture
- "Digital Designs and Computer Architectures" by Harris and Harris.
- "Computer Architecture: A Quantitative Approach" by Patterson and Hennessy.
2. FPGA
    - Prof. Pong Chu book series: 
        - FPGA Prototyping by Verilog Examples: [link](https://academic.csuohio.edu/chu_p/rtl/fpga_vlog.html)
        - FPGA Prototyping by VHDL Examples:  [link](https://academic.csuohio.edu/chu_p/rtl/fpga_vhdl.html)
3. ASIC
    - I only recommend taking courses by the EDA tool vendor (i.e. Synopsys or Cadence) as the topics are too deep in pratical for just reading a book or several books. 10+ years of working on ASIC is the minimum just to understand the basic idea (kind of ;) ). 
    - Not everything is synthesizable and not all synthesized modules work correctly, please be aware.
3. HDL (Verilog/VHDL)
    - Asic-world: [link](https://www.asic-world.com/)
    - Coding Guiline
        - Verilog/SystemVerilog designer should read Sunburst's articles at [here](http://www.sunburst-design.com/) 
        - Async. vs Sync. Reset: [pdf](http://www.sunburst-design.com/papers/CummingsSNUG2003Boston_Resets.pdf)
        - Full and Parallel Case: [pdf](http://www.sunburst-design.com/papers/CummingsSNUG1999Boston_FullParallelCase.pdf)

4. Embedded system:
    - Hard RealTime Computing Systems, Giorgio C. Buttazzo, ISBN 978-1-4614-0676-1.
    - Operating System Concepts, Abraham Silberschatz, Peter Baer Galvin and Greg Gagne, ISBN: 978-1-118-06333-0.
    - Real-Time System, Jane W.S. Liu.
    - Also, Prof. Lui Sha's works is the backbone of  real-time scheduling.
        - [https://cs.illinois.edu/directory/profile/lrs](https://cs.illinois.edu/directory/profile/lrs)
    - FreeRTOS: [https://www.freertos.org/](https://www.freertos.org/)
 -->
:ET